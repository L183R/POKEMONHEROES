 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/Interacts.py b/Interacts.py
index 992347af519a964d99b3d7fabb1ec8b08be761e2..24cf9162ba09f3c6dc8dc9256e1883208df0f9c3 100644
--- a/Interacts.py
+++ b/Interacts.py
@@ -109,42 +109,44 @@ def main():
                 list_type = candidate
                 break
             else:
                 print("Lista vacía, probando siguiente…")
 
         if not pairs:
             print("No vinieron Pokémon en ninguna lista. Corto.")
             break
 
         print(f"→ {len(pairs)} Pokémon en la lista. Mandando warms en paralelo ({WORKERS} workers, sin delay)…")
 
         # Preparamos tareas con inarow asignado por índice (aprox. “secuencia”)
         jobs = []
         with ThreadPoolExecutor(max_workers=WORKERS) as ex:
             for idx, (pkmnid, pkmnsid) in enumerate(pairs, start=1):
                 # round-robin de sesiones por worker
                 sess = sessions[(idx - 1) % WORKERS]
                 inarow = inarow_global
                 inarow_global += 1
                 jobs.append(
                     ex.submit(warm_interact, sess, list_type, pkmnid, pkmnsid, inarow, "")
                 )
 
             ok = 0
             total = len(jobs)
+            procesados = 0
             for fut in as_completed(jobs):
                 try:
                     status = fut.result()
                     if status == 200:
                         ok += 1
                 except Exception as e:
                     status = f"ERROR: {e}"
-                print(f"→ Resultado: {status}")
+                procesados += 1
+                print(f"→ Resultado: {status} ({ok}/{procesados}/{total})")
 
         interaction_count += ok
         print(f"✔️ Ciclo {cycle} completo: {ok}/{total} warms HTTP 200 (total: {interaction_count})")
         # sin delay entre ciclos; si te bloquea, agregá un sleep acá
 
     print("\nListo. Vapaí.")
 
 if __name__ == "__main__":
     main()
 
EOF
)